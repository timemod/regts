% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join_ts.R
\name{join_ts}
\alias{join_ts}
\title{Join timeseries objects with overlapping period ranges}
\usage{
join_ts(old, new, method = c("mult", "add"))
}
\arguments{
\item{old}{the first timeseries (a \code{\link{regts}} or
\code{\link[stats]{ts}} object).}

\item{new}{the second timeseries (a \code{regts} or \code{ts} object).}

\item{method}{two different ways to join the timeseries: \code{mult} and
\code{add}. By default the timeseries are joined multiplicatively.}
}
\value{
a \code{\link{regts}} object.
}
\description{
This function joins two timeseries with the same frequency and different but
overlapping period ranges.
All observations from the old timeseries, the first timeseries, are scaled
in such a way that the common observations from the two timeseries have the
same value (on average). The new timeseries, the second timeseries, must
contain the most recent data.
}
\details{
The period range of the result is the union of the period ranges of the
old and new timeseries.

When the overlapping period is determined, the trailing NA values of the old
timeseries and the leading NA values of the new timeseries are
ignored.

If both the old and new timeseries are multivariate regts objects, only
the common columns are joined. For each common timeseries the overlapping
period is determined, ignoring the NA values as described above.
The remaining columns in the new timeseries are added to the result.
Remaining columns in the old timeseries are ignored.
The result series and the new series have the same columns, in the same
order. The joined timeseries can be found in the common columns.

If both input timeseries are vectors (i.e. there are no column names), the
result is also a vector.
}
\examples{
x1 <- regts((1:15)/10, start = "2016q1")
x2 <- regts(1:10, start = "2018q4")
join_ts(x1, x2)

data <- (1:10)/10
x_old <- regts(cbind(data, 2 * data), period = "2001/2010",
            names = c("a", "b"))
x_new <- regts(cbind(10 * data, 20 * data), period = "2008/2017",
            names = c("a", "b"))
join_ts(x_old, x_new, method = "add")

# join timeseries with different column names
x_old <- regts(matrix(rep(10:15, 3), nc = 3), period = "2010/2015",
            names = c("a", "c", "d"))
x_new <- regts(matrix(rep(17:20, 3), nc = 3), period = "2014/2017",
            names = c("a", "b", "c"))
join_ts(x_old, x_new)

}
\seealso{
\code{\link{regts}} and \code{\link{update_ts}}
}
